{"version":3,"sources":["utils.js","pokemonDetail.js","Pokedex.js","App.js","serviceWorker.js","index.js"],"names":["toFirstCharUpper","word","charAt","toUpperCase","slice","useStyles","makeStyles","theme","container","paddingTop","paddingLeft","paddingRight","idNumText","position","top","left","color","img","verticalAlign","display","name","searchInput","width","margin","searchIcon","alignSelf","marginBottom","searchContainer","backgroundColor","fade","palette","common","white","marginTop","title","marginLeft","breakpoints","up","statsCard","height","textAlign","clickToHome","exact","path","render","props","Pokemon","classes","match","pokemonId","history","params","useState","undefined","pokemon","setPokemon","useEffect","axios","get","then","response","data","catch","error","AppBar","Toolbar","style","src","Typography","className","variant","noWrap","Link","component","RouterLink","to","TextField","label","onChange","CircularProgress","id","species","weight","types","sprites","moves","fullImageUrl","typesStr","front_default","map","typeInfo","type","length","href","url","Card","CardContent","Grid","spacing","item","sm","generatePokemonJSX","pokedexContainer","cardMedia","cardContent","card","boxShadow","Pokedex","pokemonData","setPokemonData","filter","setFilter","results","newPokemonData","forEach","index","sprite","e","target","value","Object","keys","includes","toLowerCase","console","log","basename","xs","key","CardMedia","image","getPokemonCard","App","Boolean","window","location","hostname","createBrowserHistory","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1ccae242.chunk.js","sourcesContent":["export function toFirstCharUpper(word) {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n}","import React, { useState, useEffect } from \"react\";\nimport {\n    Typography, Link, CircularProgress, Button, Toolbar,\n    Grid, Card, AppBar, TextField, CardContent\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { toFirstCharUpper } from \"./utils\";\nimport axios from \"axios\";\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\nimport Pokedex from \"./Pokedex\";\nimport { Route, Switch, Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        paddingTop: \"20px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n    idNumText: {\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        color: \"yellow\",\n    },\n    img: {\n        verticalAlign: \"middle\",\n        display: \"inline-block\",\n    },\n    name: {\n        verticalAlign: \"middle\",\n        display: \"inline-block\",\n    },\n    searchInput: {\n        width: \"200px\",\n        margin: \"5px\",\n    },\n    searchIcon: {\n        alignSelf: \"flex-end\",\n        marginBottom: \"5px\",\n    },\n    searchContainer: {\n        display: 'flex',\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        paddingLeft: \"20px\",\n        paddingRight: \"20px\",\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n    },\n    title: {\n        display: 'none',\n        marginLeft: \"10px\",\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    statsCard: {\n        height: \"80px\",\n        textAlign: 'center',\n    }\n}));\n\nconst Pokemon = props => {\n    const classes = useStyles();\n    const { match, history } = props;\n    const { params } = match;\n    const { pokemonId } = params;\n    const [pokemon, setPokemon] = useState(undefined);\n\n    useEffect(() => {\n        axios\n            .get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}/`)\n            .then((response) => {\n                const { data } = response;\n                setPokemon(data);\n            })\n            .catch((error) => {\n                setPokemon(false);\n            });\n    }, [pokemonId]);\n\n    function generatePokemonJSX() {\n        const { name, id, species, height, weight, types, sprites, moves } = pokemon;\n        const fullImageUrl = `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\n        const { front_default } = sprites;\n        var typesStr = \"\";\n        types.map((typeInfo) => {\n            const { type } = typeInfo;\n            const { name } = type;\n            typesStr = typesStr + name + \" / \";\n        })\n        typesStr = typesStr.slice(0, typesStr.length - 3);\n        return (\n            <>\n                <br/>\n                <div style={{paddingLeft: \"50px\", marginTop: \"15px\", verticalAlign: \"middle\", display: \"inline-block\", paddingRight: \"20px\"}}>\n                    <img style={{ width: \"150px\", height: \"150px\" }} src={fullImageUrl} />\n                </div>\n                <div style={{ verticalAlign: \"middle\", display: \"inline-block\" }}>\n                    <Typography variant=\"h3\">\n                        <Link href={species.url}>{toFirstCharUpper(name)}</Link>\n\n                    </Typography>\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\">No. {`${id}`}</Typography>\n                </div>\n\n                <div className={classes.container}>\n                    <Card><CardContent verticalAlign=\"middle\">\n                        <Typography variant=\"body\">Types: {typesStr}</Typography>\n                    </CardContent></Card>\n                </div>\n\n\n                <Grid container spacing={2} className={classes.container}>\n                    <Grid item sm={4}>\n                        <Card><CardContent className={classes.statsCard}>\n                            <Typography variant=\"overline\">Height</Typography>\n                            <Typography>{height}</Typography>                        </CardContent></Card>\n                    </Grid>\n                    <Grid item sm={4}>\n                        <Card><CardContent className={classes.statsCard}>\n                            <Typography variant=\"overline\">Weight</Typography>\n                            <Typography>{weight}</Typography>\n                        </CardContent></Card>\n                    </Grid>\n                    <Grid item sm={4}>\n                        <Card><CardContent className={classes.statsCard}>\n                            <Typography variant=\"overline\">Number of moves</Typography>\n                            <Typography>{moves.length}</Typography>\n                        </CardContent></Card>\n                    </Grid>\n                </Grid>\n\n\n            </>\n        )\n    }\n\n    return (<>\n        <AppBar position=\"sticky\" color=\"inherit\">\n            <Toolbar>\n                <img style={{ width: \"20px\", height: \"20px\" }}\n                    marginBottom={20}\n                    src=\"https://pngimg.com/uploads/pokeball/pokeball_PNG8.png\" />\n                <Typography className={classes.title} variant=\"h6\" noWrap>\n                    <Link component={RouterLink} to=\"/Pokedex-React/\" color=\"black\">\n                        Pokédex</Link>\n                </Typography>\n                <div className={classes.searchContainer}>\n                    <SearchIcon className={classes.searchIcon}></SearchIcon>\n                    <TextField className={classes.searchInput}\n                        label=\"Pokemon\"\n                        variant=\"standard\"\n                        onChange={clickToHome} />\n                </div>\n            </Toolbar>\n        </AppBar>\n        <div className={classes.container}>\n            {pokemon === undefined && <CircularProgress/>}\n            {pokemon !== undefined && pokemon && generatePokemonJSX()}\n            {pokemon === false && <Typography>Pokemon not found.</Typography>}\n        </div>\n    </>);\n}\n\nfunction clickToHome() {\n    return (\n        <Route\n            exact path=\"/Pokedex-React/\"\n            render={(props) => <Pokedex {...props} />} />\n    );\n}\n\nexport default Pokemon;","import React, { useState, useEffect } from \"react\";\nimport {\n    AppBar, Toolbar, Grid, Link,\n    Card, CardMedia, CardContent, CircularProgress, Typography, TextField\n} from \"@material-ui/core\";\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { toFirstCharUpper } from \"./utils\";\nimport Pokemon from \"./pokemonDetail\";\nimport axios from \"axios\";\nimport { Link as RouterLink, BrowserRouter, Route } from 'react-router-dom';\nimport { App } from \"./App\";\n\nconst useStyles = makeStyles((theme) => ({\n    pokedexContainer: {\n        paddingTop: \"20px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n    cardMedia: {\n        margin: \"auto\",\n    },\n    cardContent: {\n        // boxShadow: \"20px\",\n        textAlign: \"center\",\n    },\n    card: {\n        boxShadow: '2px 4px 15px rgba(0, 0, 0, .1)',\n    },\n    searchInput: {\n        width: \"200px\",\n        margin: \"5px\",\n    },\n    searchIcon: {\n        alignSelf: \"flex-end\",\n        marginBottom: \"5px\",\n    },\n    searchContainer: {\n        display: 'flex',\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        paddingLeft: \"20px\",\n        paddingRight: \"20px\",\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n    },\n    title: {\n        display: 'none',\n        marginLeft: \"10px\",\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n}));\n\nconst Pokedex = props => {\n    const classes = useStyles();\n    const { history } = props;\n    const [pokemonData, setPokemonData] = useState({});\n    const [filter, setFilter] = useState(\"\");\n\n    function handleSearchChange(e) {\n        setFilter(e.target.value);\n    }\n\n    useEffect(() => {\n        axios\n            .get(`https://pokeapi.co/api/v2/pokemon?limit=807`)\n            .then((response) => {\n                const { data } = response;\n                const { results } = data;\n                const newPokemonData = {};\n\n                results.forEach((pokemon, index) => {\n                    newPokemonData[index + 1] = {\n                        id: index + 1,\n                        name: pokemon.name,\n                        sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index + 1}.png`,\n                    };\n                });\n                setPokemonData(newPokemonData);\n            });\n    }, []);\n\n    function getPokemonCard(pokemonId) {\n        console.log(pokemonData[`${pokemonId}`]);\n        const { id, name, sprite } = pokemonData[pokemonId];\n\n        return (\n            <BrowserRouter basename=\"/Pokedex-React\">\n\n            <Grid item xs={12} sm={4} key={pokemonId}> {/* responsive - sm for smaller mobile screen sizes */}\n                    <RouterLink to={`/${pokemonId}`}>\n                    <Card className={classes.card}>\n                        <CardMedia\n                            className={classes.cardMedia}\n                            image={sprite}\n                            style={{ width: \"130px\", height: \"130px\" }}\n                        />\n                        <CardContent className={classes.cardContent}>\n                            <Typography variant=\"h6\">\n                                {`${toFirstCharUpper(name)}`}\n                            </Typography>\n                            <Typography variant=\"subtitle2\" color=\"textSecondary\">{`No. ${id}`}</Typography>\n                        </CardContent>\n                    </Card>\n                    </RouterLink>\n\n                </Grid>\n            </BrowserRouter>\n\n        );\n    }\n\n    return (\n        <>\n            <AppBar position=\"sticky\" color=\"inherit\">\n                <Toolbar>\n                    <img style={{ width: \"20px\", height: \"20px\" }}\n                        margin={20}\n                        src=\"https://pngimg.com/uploads/pokeball/pokeball_PNG8.png\" />\n                    <Link component={RouterLink} to=\"/Pokedex-React/\" color=\"black\">\n                        <Typography className={classes.title} variant=\"h6\" noWrap>\n                            Pokédex</Typography>\n                    </Link>\n                    <div className={classes.searchContainer}>\n                        <SearchIcon className={classes.searchIcon}></SearchIcon>\n                        <TextField className={classes.searchInput}\n                            label=\"Pokemon\"\n                            variant=\"standard\"\n                            onChange={handleSearchChange}/>\n                    </div>    \n\n                </Toolbar>\n            </AppBar>\n            {pokemonData ? (\n                <Grid container spacing={2} className={classes.pokedexContainer}>\n                    {Object.keys(pokemonData).map((pokemonId) => \n                        pokemonData[pokemonId].name.includes(filter.toLowerCase()) && getPokemonCard(pokemonId)\n                    )}\n                    \n                </Grid>\n            ) : (\n                <CircularProgress />\n            )}\n\n        </>\n    )\n}\n\nexport default Pokedex;","import React from 'react';\nimport Pokedex from \"./Pokedex\";\nimport Pokemon from \"./pokemonDetail\";\nimport { Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route\n        exact path=\"/Pokedex-React/\"\n        render={(props) => <Pokedex {...props} />} />\n      <Route\n        exact path=\"/Pokedex-React/:pokemonId\"\n        render={(props) => <Pokemon {...props} />} />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}